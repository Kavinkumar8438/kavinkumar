1.Factorial of a number with /without recursion
#include <stdio.h>
int fact(int val)
{
    if(val<=1)
    return 1;
    else
    return val*fact(val-1);
}
int main()
{
    int num;
    scanf("%d",&num);
    printf("%d",fact(num));
    return 0;
}

2.Fibonacci series until limit
#include <stdio.h>

int fibonacci(int n) {
   if(n == 0)
      return 0;
   else if(n == 1)
      return 1;
   else
      return (fibonacci(n-1) + fibonacci(n-2));
}

int main() {
   int num;
   scanf("%d", &num);
   for (int i = 0; i < num; i++) 
      printf("%d ", fibonacci(i));
     return 0;
}
3.Nth digit in Fibonacci series
#include <stdio.h>

int fibonacci(int n) {
   if(n == 0)
      return 0;
   else if(n == 1)
      return 1;
   else
      return (fibonacci(n-1) + fibonacci(n-2));
}

int main() {
   int num;
   scanf("%d", &num);
   printf("%d ", fibonacci(num-1));
     return 0;
}
4.Sum of Fibonacci series
#include <stdio.h>

int fibonacci(int n) {
    if(n == 0)
        return 0;
    else if(n == 1)
        return 1;
    else
        return (fibonacci(n-1) + fibonacci(n-2));
}

int main() {
    int num, sum = 0;
    scanf("%d", &num);
    for (int i = 0; i < num; i++) 
        sum += fibonacci(i);
    printf("%d\n", sum);
    return 0;
}

5.Armstrong
#include <stdio.h>
#include <math.h>
 
void main()
{
    int num, cod=0, sum=0,temp;
    scanf("%d", &num);
    temp = num;
    int number = num;
    while(num>0)  
    {
        num = num/10;                                   
        cod++;      // count of digits n
    }
    while (temp>0)	  
    {
        sum=sum+ pow((temp%10), cod);
        temp = temp / 10;
    }
    (sum == number)?printf ("Armstrong number"):printf ("Not an Armstrong number");
}

6.Palindrome
#include <stdio.h>
int isPalindrome(int n,int rev)
{
    if (n==0)
        return rev;
    rev = rev * 10 + n % 10;
    isPalindrome(n/10,rev);
}

int main()
{
    int num,res,rev=0;
    scanf("%d",&num);
    res = isPalindrome(num,rev); 
    (res==num)?printf("Palindrome number"):printf("Not a palindrome number");
    return 0;
}
7.Prime
#include <stdio.h>
#include <math.h>
 
int main()
{
    int num, j, flag=0;
    scanf("%d", &num);
     if (num <= 1)
        printf("Not a prime number");
    else{
         for (j = 2; j <= sqrt(num); j++)
    {
        if ((num % j) == 0)
        {
            flag = 1;
            break;
        }
    }
    }
    (flag == 0)?printf("Prime number"):printf("Not a prime number");
}

8.M pattern
#include<stdio.h>

int main() {
    int n;
    scanf("%d", &n);

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            if (j == 1 || j == n || (i == j && i <= n / 2 + 1) || (i + j - 1 == n && i <= n / 2 + 1)) {
                printf("*");
            } else {
                printf(" ");
            }
            printf(" "); // Print a space after each character
        }
        printf("\n");
    }
    
    return 0;
}
9.12345
   2345
    345
     45
      5
#include<stdio.h>
int main()
{
    int i,j,n;
    scanf("%d",&n);
    for(int i=1;i<=n;i++,printf("\n"))  
    {
        for(int j=1;j<=n;j++)
        if(i<=j)
        printf("%d ",j);
        else
        printf("  ");
    }
    return 0;
}


10.Sand clock
#include<stdio.h>

int main() {
    int i, j, n;
    scanf("%d", &n);

    for (i = 1; i <= n; i++,printf("\n"))
    {
        for (j = 1; j < i; j++) 
            printf("  ");
        for (j = i; j <= n; j++)
            printf("* ");
        for (j = i; j < n; j++) 
            printf("* ");
    }
    for (i = 2; i <= n; i++,printf("\n")) 
    {
        for (j = n; j > i; j--)
            printf("  ");
        for (j = 1; j <= i; j++) 
            printf("* ");
        for (j = 1; j < i; j++) 
            printf("* ");
    }
    return 0;
}
