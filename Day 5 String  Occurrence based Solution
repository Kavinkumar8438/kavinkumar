1. Frequency of occurence

#include<stdio.h>
void main()
{

    char str[50]="RVSCCT";
    char alphabets[123]={0};
    int index=0;
    while(str[index] !='\0')
        {
        alphabets[str[index]]++;
        index++;
        }
    for(int i=0;i<123;i++)
    {
        if(alphabets[i]!=0)
        printf("%c--%d time\n",i,alphabets[i]);
        
    }
    
}
2. Frequency of occurence from user input by converting to lowercase

#include <stdio.h>
#include <ctype.h>

int main() {
    char str[50];
    int index = 0;
     fgets(str, sizeof(str), stdin);
    char alphabets[26] = {0};

    while (str[index] != '\0') {
            alphabets[tolower(str[index]) - 97]++;
                index++;
    }

    for (int i = 0; i < 26; i++) {
        if (alphabets[i] != 0) {
            printf("\n%c ---> %d time", i+97 , alphabets[i]);
        }
    }
    return 0;
}

3.Repeating Chaaracters
#include <stdio.h>
#include <ctype.h>

int main() {
    char str[50];
    int index = 0;
     fgets(str, sizeof(str), stdin);
    char alphabets[26] = {0};

    while (str[index] != '\0') {
            alphabets[tolower(str[index]) - 97]++;
                index++;
    }

    for (int i = 0; i < 26; i++) {
        if (alphabets[i]>1) {
            printf("%c", i+97);
        }
    }
    return 0;
}




4.Sort the characters without repetion
#include <stdio.h>
#include <ctype.h>

int main() {
    char str[50];
    int index = 0;
     fgets(str, sizeof(str), stdin);
    char alphabets[26] = {0};

    while (str[index] != '\0') {
            alphabets[tolower(str[index]) - 97]++;
                index++;
    }

    for (int i = 0; i < 26; i++) {
        if (alphabets[i] >=1) {
            printf("%c", i+97);
        }
    }
    return 0;
}



