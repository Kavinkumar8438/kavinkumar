1.Write a program to accept N values into an integer array and display the contents of the array in the reverse order.
#include<stdio.h>
void main()
{
int noe;
scanf("%d ",&noe);
int arr[noe];
for(int count=0;count<noe;count++)
    scanf("%d",arr[count]);
for(int count=0;count<=noe;count++)
    printf("%d ",arr[count]);
}

2.Write a  program to count the number of 0s and 1s in an array that is in random order. You may assume that the array consists of only 0s and 1s.

#include<stdio.h>
int main()
{
    int noe;
    scanf("%d",&noe);
    int arr[noe],coz=0;
    for(int count=0;count<noe;count++)
    {
    scanf("%d",arr[noe]);
    if(arr[noe]==0) coz++;
    }
    printf("0:%d 1:%d",coz,noe-coz);
}

3. Write a  program to print the count of the elements in an array whose values are lesser than a key element in an unsorted array.
#include<stdio.h>
void main()
{
int noe,key,min=0;
scanf("%d ",&noe);
int arr[noe];
for(int count=0;count<noe;count++)
    scanf("%d",arr[count]);
scanf("%d",&key);
for(int count=0;count<noe;count++)
{
  if(arr[count]<key)
       min++;
}
printf("%d",min);
}

4.Write a  Program to print all the repeated elements in a sorted array.


#include<stdio.h>
void main()
{
int noe;
scanf("%d ",&noe);
int arr[noe];
for(int count=0;count<noe;count++)
    scanf("%d",&arr[count]);

for(int count=0;count<noe;count++)
{
    int isRepeated=0;
  for (int j = 0; j < count; j++) 
    {
        if(arr[count]==arr[j])
       { isRepeated=1;
        break;
        }
    }

    if(isRepeated)
        continue;
  
    for (int j = count + 1; j < noe; j++) 
    {
        if(arr[count]==arr[j])
        {
        printf("%d ",arr[count]);
break;
}
    }
}
    
}

5.Write a program to search an element in the given array and print the searched elements index. If no such elements were found print -1
#include<stdio.h>
int main(){
    int noe,search,count;
    scanf("%d",&noe);
    int arr[noe];
    for(count=0;count<noe;count++)
        scanf("%d",&arr[count]);

    scanf("%d",&search);

   for(count=0;count<noe;count++)
   {
       if(search==arr[count])
       {
         printf("%d",count);
         break;
       }
        else if(count==noe-1)
        printf("-1");
   }
}

6.You are given an array of 0s and 1s in random order. Segregate 0s on left side and 1s on right side of the array . 
Input array   =  [0, 1, 0, 1, 0, 0, 1, 1, 1, 0] 
Output array =  [0, 0, 0, 0, 0, 1, 1, 1, 1, 1] 
#include<stdio.h>  
int main()  
{  
    int noe;  
    scanf("%d", &noe);  
    int arr[noe];  
    for(int i = 0; i < noe; i++)  
        scanf("%d", &arr[i]);  
    for(int i = 0; i < noe; i++)  
    {  
        int min = arr[i];  
        for(int j = i + 1; j < noe; j++)  
        {  
            if(arr[j] < min)  
            {  
                int temp = arr[j];  
                arr[j] = arr[i];  
                arr[i] = temp;  
            }  
        }  
    }  
    for(int i = 0; i < noe; i++)  
    {  
        printf("%d ", arr[i]);  
    }  
}  

7.Write a program  to replace every element in an array with the sum of its right side elements
#include<stdio.h>
int main()
{
    int N, index, sum=0;
    scanf("%d",&N);
    int arr[N];
    for(index=0;index<N;index++)
{       scanf("%d",&arr[index]);
        sum+=arr[index];
 }   for(index=0;index<N;index++)
    {
        sum-=arr[index];
        arr[index]=sum;
    }

 for(index=0;index<N;index++)
        printf("%d ",arr[index]);
    return 0;
}

8.Write a program  to reverse the array elements
#include<stdio.h>
int main()
{
    int N, start, end, index, temp;
    scanf("%d",&N);
    int arr[N];
    for(index=0;index<N;index++)
            scanf("%d",&arr[index]);
     start = 0;
    end = N - 1;
    while (start < end) {
        temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
  for(index=0;index<N;index++)
    printf("%d ",arr[index]);
    return 0;
}
9.Write a program  to insert the value at given position in the array.
#include<stdio.h>
void main()
{
int arr[100];
int noe;
scanf("%d ",&noe);
for(int count=0;count<noe;count++)
    scanf("%d",&arr[count]);
   int value,pos;
   scanf("%d %d",&value,&pos);
    for(int count=noe;count>=pos;count--)
    arr[count]=arr[count-1];
    arr[pos-1]=value;
    for(int count=0;count<=noe;count++)
    printf("%d ",arr[count]);
}

10.Write a program  to delete the value at given position from the array.
#include<stdio.h>
void main()
{
int arr[100];
int noe;
scanf("%d ",&noe);
for(int count=0;count<noe;count++)
    scanf("%d",&arr[count]);
   int pos;
   scanf("%d",&pos);
    for(int count=pos-1;count<noe-1;count++)
    arr[count]=arr[count+1];
    noe--;
    for(int count=0;count<noe;count++)
   printf("%d ",arr[count]);
}

11.Write a program  to swap every pair of  adjacent array elements

#include<stdio.h>
void main()
{
int noe;
scanf("%d ",&noe);
int arr[noe];
for(int count=0;count<noe;count++)
    scanf("%d",&arr[count]);
for(int start=0;start<noe-1;start+=2)
    {
   int temp=arr[start];
    arr[start]=arr[start+1];
    arr[start+1]=temp;
    }
    for(int count=0;count<noe;count++)
    printf("%d ",arr[count]);
}

12.Write a program  to left rotate for given times of an array elements

13.Given an array X with n number of elements, return true if the given array X is sorted else return false. You may consider multiple positions may be shifted in the array X. 
Example 1: Input: X=[1,2,3,4,5] Output: true 
Example 2: Input: X=[3,4,5, 1,2,] Output: true
 Example 3: Input: X=[3,1,2,4,5] Output: false

#include <stdio.h>

int isSortedAndRotated(int arr[], int num) {
    int minIndex = 0;
    
    // Find the index of the minimum element
    for (int i = 1; i < num; i++) {
        if (arr[i] < arr[minIndex]) {
            minIndex = i;
        }
    }

    // Check if elements from minIndex to end are sorted
    for (int i = minIndex; i < num - 1; i++) {
        if (arr[i] > arr[i + 1]) {
            return 0;
        }
    }

    // Check if elements from start to minIndex-1 are sorted
    for (int i = 0; i < minIndex - 1; i++) {
        if (arr[i] > arr[i + 1]) {
            return 0;
        }
    }

    // Check if the last element is less than the first element
    if (arr[num - 1] > arr[0]) {
        return 0;
    }

    return 1;
}

int main() {
    int num;
    scanf("%d", &num);
    int arr[num];
    for (int i = 0; i < num; i++) 
        scanf("%d", &arr[i]);
    (isSortedAndRotated(arr, num)) ? printf("True") : printf("False"); 
    return 0;
}
*******OR******
#include <stdio.h>

int Sorted(int arr[], int num) {
    int count = 0;
    for (int i = 0; i < num; i++) {
        if (arr[i] > arr[(i + 1) % num]) {
            count++;
        }
    }
    return count <= 1;
}

int main() {
    int num;
    scanf("%d", &num);
    int arr[num];
    for (int i = 0; i < num; i++) 
        scanf("%d", &arr[i]);
    (Sorted(arr, num)) ? printf("True") : printf("False"); 
    return 0;
}

14.Write a program  to remove the duplicates in an array .
#include<stdio.h>
void main()
{
int arr[100],inloop;
int noe;
scanf("%d",&noe);

for(int count=0;count<noe;count++)
    scanf("%d",&arr[count]);


    for(int start=0;start<noe-1;start++)
{
   for(int inloop=start+1;inloop<noe;inloop++)
{

if (arr[start]==arr[inloop])
{
for(int inloop1=inloop;inloop1<noe;inloop1++)
arr[inloop1]=arr[inloop1+1];
noe--;
inloop--;
}
}
}
   for(int count=0;count<noe;count++)
   printf("%d ",arr[count]);
}

15.Write a program  to find second largest and second smallest in array
